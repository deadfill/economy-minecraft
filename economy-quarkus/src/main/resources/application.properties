# === HTTP ===
quarkus.http.port=8081
quarkus.http.host=0.0.0.0

# === Database (PostgreSQL + Flyway) ===
# Write datasource через PgBouncer
quarkus.datasource.write.db-kind=postgresql
quarkus.datasource.write.jdbc.url=jdbc:postgresql://${PGBOUNCER_WRITE_HOST:localhost}:${PGBOUNCER_WRITE_PORT:6432}/${POSTGRES_DB:econ}?preferQueryMode=simple
quarkus.datasource.write.username=${POSTGRES_USER:game}
quarkus.datasource.write.password=${POSTGRES_PASSWORD:gamepass}
quarkus.datasource.write.jdbc.min-size=5
quarkus.datasource.write.jdbc.max-size=50
quarkus.datasource.write.jdbc.acquisition-timeout=PT30S
quarkus.datasource.write.jdbc.leak-detection-interval=PT10M

# Read datasource через PgBouncer (replicas)
quarkus.datasource.read.db-kind=postgresql
quarkus.datasource.read.jdbc.url=jdbc:postgresql://${PGBOUNCER_READ_HOST:localhost}:${PGBOUNCER_READ_PORT:7432}/${POSTGRES_DB:econ}?preferQueryMode=simple
quarkus.datasource.read.username=${POSTGRES_USER:game}
quarkus.datasource.read.password=${POSTGRES_PASSWORD:gamepass}
quarkus.datasource.read.jdbc.min-size=10
quarkus.datasource.read.jdbc.max-size=100
quarkus.datasource.read.jdbc.acquisition-timeout=PT15S
quarkus.datasource.read.jdbc.leak-detection-interval=PT5M

# Default datasource для миграций (write)
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=jdbc:postgresql://${PGBOUNCER_WRITE_HOST:localhost}:${PGBOUNCER_WRITE_PORT:6432}/${POSTGRES_DB:econ}?preferQueryMode=simple
quarkus.datasource.username=${POSTGRES_USER:game}
quarkus.datasource.password=${POSTGRES_PASSWORD:gamepass}
quarkus.flyway.migrate-at-start=true
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.baseline-version=1


# === Redis (Production Configuration) ===
quarkus.redis.hosts=redis://${REDIS_HOST:localhost}:${REDIS_PORT:6379}
quarkus.redis.timeout=PT10S
quarkus.redis.max-pool-size=20
quarkus.redis.max-pool-waiting=50
quarkus.redis.pool-cleaner-interval=PT30S
quarkus.redis.pool-recycle-timeout=PT15S

# === NATS / JetStream (Production Configuration) ===
app.nats.servers=${NATS_SERVERS:nats://localhost:4222}
app.nats.name=econ-service-${quarkus.uuid:unknown}
app.nats.js.stream=ECON
app.nats.js.subject=econ.production.done
app.nats.max-reconnects=-1
app.nats.reconnect-wait=PT2S
app.nats.ping-interval=PT10S
app.nats.connection-timeout=PT5S
app.nats.request-cleanup-interval=PT5S
# Настройки для гарантированной доставки
app.nats.js.max-deliver=3
app.nats.js.ack-wait=PT30S
app.nats.js.max-ack-pending=1000

# === Scheduler ===
quarkus.scheduler.enabled=true

# SmallRye Metrics ????????? (? ?????????? ????? ?????? ?? cgroups)
# ???? ????????? ?? Micrometer + Prometheus, ??????????????:
# === Monitoring & Metrics ===
# quarkus.micrometer.export.prometheus.enabled=true
# quarkus.micrometer.export.prometheus.path=/metrics
# quarkus.micrometer.binder.jvm=true
# quarkus.micrometer.binder.system=true
# quarkus.micrometer.binder.http-server.enabled=true
# quarkus.micrometer.binder.redis.enabled=true

# ????????? ????? ??? ????????? (dev)
quarkus.analytics.disabled=true

# === Logging (Production) ===
quarkus.log.level=${LOG_LEVEL:INFO}
quarkus.log.category."com.example.economy".level=${APP_LOG_LEVEL:INFO}
quarkus.log.category."io.agroal".level=WARN
quarkus.log.category."org.hibernate".level=WARN
quarkus.log.category."org.flyway".level=INFO
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) %s%e%n
# quarkus.log.console.json=false
# Для централизованного логирования
# quarkus.log.file.enable=true
# quarkus.log.file.path=/app/logs/application.log
# quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) %s%e%n
# quarkus.log.file.rotation.max-file-size=100M
# quarkus.log.file.rotation.max-backup-index=10

# === JWT (???? ?????????) ===
smallrye.jwt.sign.key=MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDTG8ilQ4GZuQ5N
mp.jwt.verify.issuer=https://economy-admin
quarkus.smallrye-jwt.enabled=false

# === File-based Security (Elytron properties-file) ===
# ????????? ??????????: io.quarkus:quarkus-elytron-security-properties-file
quarkus.security.users.file.enabled=true
quarkus.security.users.file.realm-name=admin-realm
quarkus.security.users.file.plain-text=true
# ???? ? ?????? ? ??????????????/?????? (?????? ? classpath, ????. src/main/resources/)
quarkus.security.users.file.users=users.properties
quarkus.security.users.file.roles=roles.properties

# === CORS ??? ???-?????????? ===
quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:3000,http://localhost:8081
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with

# === Health Checks ===
quarkus.smallrye-health.root-path=/health
quarkus.smallrye-health.liveness-path=/health/live
quarkus.smallrye-health.readiness-path=/health/ready

# === Performance Tuning ===
quarkus.thread-pool.core-threads=8
quarkus.thread-pool.max-threads=64
quarkus.thread-pool.queue-size=1000
quarkus.vertx.event-loops-pool-size=4
quarkus.vertx.worker-pool-size=32

# === Production Profiles ===
%prod.quarkus.log.level=INFO
%prod.quarkus.log.category."com.example.economy".level=INFO
%prod.quarkus.hibernate-orm.log.sql=false
# %prod.quarkus.log.console.json=true

# === Environment-specific overrides ===
%dev.quarkus.datasource.write.jdbc.url=jdbc:postgresql://localhost:5432/econ
%dev.quarkus.datasource.read.jdbc.url=jdbc:postgresql://localhost:5432/econ
%dev.quarkus.redis.hosts=redis://localhost:6379
%dev.app.nats.servers=nats://localhost:4222
