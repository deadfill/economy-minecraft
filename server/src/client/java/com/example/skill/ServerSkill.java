package com.example.skill;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * –ú–æ–¥–µ–ª—å —Å–∫–∏–ª–ª–∞, –ø–æ–ª—É—á–∞–µ–º–∞—è —Å —Å–µ—Ä–≤–µ—Ä–∞ economy API
 */
public class ServerSkill {
    @JsonProperty("id")
    public String id;
    
    @JsonProperty("title")
    public String title;
    
    @JsonProperty("desc")
    public String description;
    
    @JsonProperty("maxLevel")
    public int maxLevel;
    
    @JsonProperty("durationsMs")
    public long[] durationsMs;

    // –õ–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø–æ–ª—É—á–∞—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏)
    public int currentLevel = 0;
    public SkillTraining activeTraining = null;

    public ServerSkill() {}

    public ServerSkill(String id, String title, String description, int maxLevel, long[] durationsMs) {
        this.id = id;
        this.title = title;
        this.description = description;
        this.maxLevel = maxLevel;
        this.durationsMs = durationsMs;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
     */
    public long getTrainingDurationMs() {
        if (currentLevel >= maxLevel) return 0;
        return durationsMs[currentLevel]; // durationsMs[0] –¥–ª—è —É—Ä–æ–≤–Ω—è 1, durationsMs[1] –¥–ª—è —É—Ä–æ–≤–Ω—è 2, –∏ —Ç.–¥.
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è –≤ —á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
     */
    public String getFormattedDuration() {
        long durationMs = getTrainingDurationMs();
        if (durationMs == 0) return "–ú–∞–∫—Å. —É—Ä–æ–≤–µ–Ω—å";
        
        return formatDuration(durationMs);
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –º–æ–∂–Ω–æ –ª–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–∫–∏–ª–ª
     */
    public boolean canTrain() {
        return currentLevel < maxLevel && activeTraining == null;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∏–¥–µ—Ç –ª–∏ —Å–µ–π—á–∞—Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞
     */
    public boolean isTraining() {
        return activeTraining != null && !activeTraining.isCompleted();
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ (0.0 - 1.0)
     */
    public float getTrainingProgress() {
        if (activeTraining == null) return 0f;
        return activeTraining.getProgress();
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º—è –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
     */
    public long getTimeLeftMs() {
        if (activeTraining == null) return 0;
        return activeTraining.getTimeLeftMs();
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
     */
    public String getFormattedTimeLeft() {
        long timeLeft = getTimeLeftMs();
        if (timeLeft <= 0) return "–ì–æ—Ç–æ–≤–æ!";
        return formatDuration(timeLeft);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ–Ω—É—Å–∞ —Å–∫–∏–ª–ª–∞
     */
    public String getBonusDescription() {
        if ("industry".equals(id)) {
            int bonusPercent = Math.min(25, currentLevel * 5);
            return String.format("-%d%% –∫ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–µ—Å—É—Ä—Å–æ–≤", bonusPercent);
        }
        return "";
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥
     */
    private static String formatDuration(long ms) {
        long seconds = ms / 1000;
        long minutes = seconds / 60;
        long hours = minutes / 60;
        long days = hours / 24;

        if (days > 0) {
            return String.format("%d–¥ %d—á", days, hours % 24);
        } else if (hours > 0) {
            return String.format("%d—á %d–º", hours, minutes % 60);
        } else if (minutes > 0) {
            return String.format("%d–º %d—Å", minutes, seconds % 60);
        } else {
            return String.format("%d—Å", seconds);
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É –¥–ª—è —Å–∫–∏–ª–ª–∞
     */
    public String getIcon() {
        return switch (id) {
            case "industry" -> "üè≠";
            default -> "‚≠ê";
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç –¥–ª—è —Å–∫–∏–ª–ª–∞
     */
    public int getColor() {
        return switch (id) {
            case "industry" -> 0xFF8E44AD; // –§–∏–æ–ª–µ—Ç–æ–≤—ã–π
            default -> 0xFF95A5A6; // –°–µ—Ä—ã–π
        };
    }

    @Override
    public String toString() {
        return String.format("ServerSkill{id='%s', title='%s', level=%d/%d}", 
                           id, title, currentLevel, maxLevel);
    }
}
