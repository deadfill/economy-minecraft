plugins {
    id 'fabric-loom' version "${loom_version}"
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    splitEnvironmentSourceSets()
    mods {
        // ❗ имя мода здесь должно совпадать с "id" в fabric.mod.json
        "template-mod" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

repositories {
    mavenCentral()
    // ✅ Добавляем репозиторий owo-lib
    maven {
        name = 'Wisp Forest'
        url = 'https://maven.wispforest.io/releases/'
    }
}

dependencies {
    // версии берутся из gradle.properties
    minecraft "com.mojang:minecraft:${project.minecraft_version}"

    // Mojang mappings
    mappings loom.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // ✅ Jackson — ВШИВАЕМ в мод
    modImplementation(include("com.fasterxml.jackson.core:jackson-databind:2.17.1"))
    modImplementation(include("com.fasterxml.jackson.core:jackson-core:2.17.1"))
    modImplementation(include("com.fasterxml.jackson.core:jackson-annotations:2.17.1"))

    // ✅ NATS — тоже вшиваем в мод
    modImplementation(include("io.nats:jnats:2.17.6"))

    // owo-lib временно отключена - используем Vanilla GUI
    // modImplementation "io.wispforest:owo-lib:${project.owo_version}"
    // include "io.wispforest:owo-sentinel:${project.owo_version}"

}

processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand "version": inputs.properties.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    inputs.property "archivesName", project.base.archivesName
    from("LICENSE") { rename { "${it}_${inputs.properties.archivesName}" } }
}

publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }
    repositories { }
}
